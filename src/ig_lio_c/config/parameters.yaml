map_builder_node:
  ros__parameters:
    use_sim_time: False # ROS2使用仿真时钟
    map_frame: map # 世界坐标系frameid
    local_frame: local # 本地坐标系frameid
    body_frame: odom # 设备坐标系frameid
    imu_topic: /livox/imu # imu订阅话题
    livox_topic: /livox/lidar # livox点云订阅话题
    dynamic_point_cloud_removal_config: config_fg.yaml # 动态物体过滤配置文件
    publish_map_cloud: False # 发布重定位地图点云
    publish_slam_cloud: False # 发布建图点云（消耗性能较大）
    max_slam_cloud_num: 100 # 建图点云帧数量
    local_rate: 300.0 # 主循环运行频率（需>=IMU发布频率）
    loop_rate_lc: 0.5 # 回环检测频率
    loop_rate_l: 0.25 # 重定位频率
    blind: 0.4 # 雷达近点过滤范围（球形）
    height_offset: 0.0 # do not change this yet

    lio_builder:
      scan_resolution: 0.3 # 扫描分辨率
      map_resolution: 0.3 # 建图分辨率
      point2plane_gain: 100.0 # fastlio过程增益
      gicp_constraint_gain: 100.0 # gicp过程增益
      map_capacity: 5000000 # 地图容量
      grid_capacity: 20 # VoxelMap grid容量
      extrinsic_est_en: True # 外参估计
      align_gravity: True # 启用重力对齐（与set_initpose冲突）
      set_initpose: False # 设置初始位姿（使用base_link变换）【覆盖align_gravity】
      near_mode: 1 # 邻近点搜索模式
      #---噪声---# //一般保持此项即可//
      acc_cov: 0.1 # 加速度计测量误差协方差
      gyr_cov: 0.1 # 陀螺仪测量误差协方差
      ba_cov: 0.00001 # 加速度计偏置误差协方差
      bg_cov: 0.00001 # 陀螺仪偏置误差协方差

      imu_ext_rot: [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0] # imu外参旋转部分
      imu_ext_pos: [-0.011, -0.02329, 0.04412] # imu外参平移部分

    lio_slam:
      ext_r: [3.14159265358979323846, 0., 0.] # base_link外参旋转部分
      ext_t: [-0.0151, 0., 0.] # base_link外参平移部分
      imu_compensation: True # 使用IMU进行里程计点云帧间补偿以获得更高里程计发布频率

    #----------------重定位和回环检测请勿同时启用----------------#
    loop_closure:
      activate: True # 启用回环检测
      rad_thresh: 0.2 # 角度阈值
      dist_thresh: 1.0 # 距离阈值
      time_thresh: 30.0 # 时间阈值
      loop_pose_search_radius: 30.0 # 回环检测搜索半径
      loop_pose_index_thresh: 25 # 回环检测历史帧搜索范围
      submap_resolution: 0.3 # 子图分辨率
      submap_search_num: 25 # 子图搜索数量
      loop_icp_thresh: 0.3 # icp阈值

    localizer:
      reloc_on_init: False # 初始化时启用重定位
      pcd_path: "/home/nine-fish/octomapfg_output.pcd" # 重定位使用的点云地图
      xyz_rpy: [0.0, 0.0, 0.0, 3.14159265358979323846, 0.0, 0.0] # 重定位初始位资
      refine_resolution: 0.15
      rough_resolution: 0.3
      refine_iter: 5.
      rough_iter: 10.
      thresh: 0.15
      xy_offset: 1.0
      yaw_offset: 3
      yaw_resolution: 0.1

occupancy_grid_converter:
  ros__parameters:
    use_sim_time: False
    map_frame: map # 世界坐标系frameid
    local_frame: local # 本地坐标系frameid
    robot_frame: base_link # 机器人frameid (tf2)
    grid_map_cloud_size: 10 # 障碍检测积分点云数量
    occupancyGriddataMin: 0.65
    occupancyGriddataMax: 20.0
    point_min_height: -0.7 # 点云高度过滤
    point_max_height: 1.0 # 点云高度过滤
    min_distance: 0.4 # 近点过滤

    filters_local:
      filter1:
        name: surface_normals
        type: gridMapFilters/NormalVectorsFilter
        params:
          algorithm: area
          parallelization_enabled: False
          input_layer: elevation
          output_layers_prefix: normal_vectors_
          radius: 0.2
          normal_vector_positive_axis: z

      filter2:
        name: slope
        type: gridMapFilters/MathExpressionFilter
        params:
          algorithm: area
          parallelization_enabled: False
          output_layer: slope
          expression: acos(normal_vectors_z)

    filters_map:
      filter1:
        name: surface_normals
        type: gridMapFilters/NormalVectorsFilter
        params:
          algorithm: area
          parallelization_enabled: False
          input_layer: elevation
          output_layers_prefix: normal_vectors_
          radius: 0.2
          normal_vector_positive_axis: z

      filter2:
        name: slope
        type: gridMapFilters/MathExpressionFilter
        params:
          algorithm: area
          parallelization_enabled: False
          output_layer: slope
          expression: acos(normal_vectors_z)
